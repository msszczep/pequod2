
to produce-2 [ pset ]
  ask pset [
    let o product-price

set z e ^ (( - (k * ln a) - c * ln c + c * ln k - c * ln o + c * ln S - k * ln o * cdx 1 - k * ln cdx 1 * cdx 1 + k * ln price 1 * cdx 1 - k * ln o * cdx 2 - k * ln cdx 2 * cdx 2 + k * ln price 2 * cdx 2) / (c - k + k * cdx 1 + k * cdx 2))

set x1 e ^ (( - (k * ln a) - c * ln c + c * ln k - k * ln o + c * ln S + c * ln cdx 1 - k * ln cdx 1 - c * ln price 1 + k * ln price 1 + k * ln cdx 1 * cdx 2 - k * ln cdx 2 * cdx 2 - k * ln price 1 * cdx 2 + k * ln price 2 * cdx 2) / (c - k + k * cdx 1 + k * cdx 2))

set x2 e ^ (( - (k * ln a) - c * ln c + c * ln k - k * ln o + c * ln S + c * ln cdx 2 - k * ln cdx 2 - c * ln price 2 + k * ln price 2 - k * ln cdx 1 * cdx 1 + k * ln cdx 2 * cdx 1 + k * ln price 1 * cdx 1 - k * ln price 2 * cdx 1) / (c - k + k * cdx 1 + k * cdx 2))

set ef e ^ (( - ln a - ln c + ln k - ln o + ln S + ln c * cdx 1 - ln k * cdx 1 - ln S * cdx 1 - ln cdx 1 * cdx 1 + ln price 1 * cdx 1 + ln c * cdx 2 - ln k * cdx 2 - ln S * cdx 2 - ln cdx 2 * cdx 2 + ln price 2 * cdx 2) / (c - k + k * cdx 1 + k * cdx 2))

    assign-new-proposal    
  ]
end

